/ app/views/patent_applications/_form.html.slim
/
/ This partial renders a compact form for creating/editing a patent application.
/ The form is designed to be secondary to the chat interface, which is the primary element.
/
/ Features:
/ - Compact problem and solution text areas that are always editable
/ - Save button to persist changes
/ - Uses Stimulus for real-time validation and feedback
/ - Comprehensive debug logging

= form_with model: patent_application, 
            id: dom_id(patent_application, "form"),
            class: "patent-form",
            data: { controller: "patent-form", action: "turbo:submit-start->patent-form#handleSubmitStart turbo:submit-end->patent-form#handleSubmitEnd", persisted: patent_application.persisted? } do |form|
  
  / Error messages
  - if patent_application.errors.any?
    .alert.alert-danger.small.p-2.mb-3
      h6.mb-1 = "#{pluralize(patent_application.errors.count, "error")} prohibited saving:"
      ul.mb-0.ps-3
        - patent_application.errors.each do |error|
          li = error.full_message
          
  / Title field - marked as required in UI but can be blank in database
  .mb-4
    .d-flex.justify-content-between.align-items-center.mb-2
      = form.label :title, "Patent Title", class: "form-label fw-semibold mb-0"
      span.badge.bg-light.text-secondary.border Required
    = form.text_field :title, 
                    class: "form-control border", 
                    placeholder: "Enter a title for your patent application", 
                    required: true,
                    data: { patent_form_target: "title", action: "input->patent-form#handleFieldInput input->patent-form#validateTitle" }
    .form-text.small.text-muted
      | The title should be descriptive and unique for your account.
      - if patent_application.title.present?
        - logger.debug "[PatentApplicationForm] Rendering with title: #{patent_application.title}"

  / Problem field with enhanced styling
  .mb-4
    .d-flex.justify-content-between.align-items-center.mb-2
      = form.label :problem, "Technical Problem", class: "form-label fw-medium"
      span.badge.bg-light.text-secondary.border Required
    = form.text_area :problem, 
                    class: "form-control border", 
                    rows: 5, 
                    style: "border-radius: 12px; resize: vertical; transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;",
                    placeholder: "Describe the technical problem you're solving", 
                    required: true,
                    data: { patent_form_target: "problem", action: "input->patent-form#handleFieldInput focus->patent-form#handleFieldFocus blur->patent-form#handleFieldBlur" }
    .form-text.text-muted.mt-2
      i.bi.bi-info-circle.me-1
      | A clear statement of the technical problem (AI will help you refine this)
  
  / Solution field with enhanced styling
  .mb-4
    .d-flex.justify-content-between.align-items-center.mb-2
      = form.label :solution, "Technical Solution", class: "form-label fw-semibold mb-0"
      span.badge.bg-light.text-secondary.border Required
    = form.text_area :solution, 
                    class: "form-control border", 
                    rows: 6, 
                    style: "border-radius: 12px; resize: vertical; transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;",
                    placeholder: "Describe your proposed solution to the problem...",
                    required: true,
                    data: { patent_form_target: "solution", action: "input->patent-form#handleFieldInput focus->patent-form#handleFieldFocus blur->patent-form#handleFieldBlur" }
    .form-text.text-muted.mt-2
      i.bi.bi-info-circle.me-1
      | Your solution to the problem (AI will help you refine this)
  
  / Save button with enhanced styling

  .d-grid.gap-2.mb-4
    button.btn.btn-primary.py-2.opacity-50.cursor-not-allowed type="submit" style="border-radius: 12px; background: linear-gradient(135deg, var(--primary-color), #0052cc);" data-patent-form-target="submitButton" disabled=true
      span.d-flex.align-items-center.justify-content-center data-patent-form-target="buttonText"
        i.bi.bi-save.me-2
        | Save
      span.spinner-border.spinner-border-sm.d-none data-patent-form-target="spinner" role="status" aria-hidden="true"
    
    - if patent_application.persisted?
      - logger.debug "[PatentApplicationForm] Rendering saved state for application: #{patent_application.id}"
      span.text-muted.small.ms-2.d-none data-patent-form-target="savedText"
        | Saved
  
  / Status information with enhanced styling
  .mt-3.small.p-3.rounded-3 style="background-color: var(--surface-color); border: 1px solid var(--border-color);"
    .d-flex.justify-content-between.text-muted
      div
        | ID: 
        span.fw-bold = patent_application.persisted? ? patent_application.id : "(new)"
      div
        | Updated: 
        span.fw-bold = patent_application.updated_at ? patent_application.updated_at.strftime("%Y-%m-%d %H:%M") : "never"
    .d-flex.mt-1.text-muted
      div
        | Title: 
        span.fw-bold = patent_application.title
        | Problem: 
        span.fw-bold = patent_application.problem.present? ? "#{patent_application.problem.truncate(20)}" : "empty"
        | , Solution: 
        span.fw-bold = patent_application.solution.present? ? "#{patent_application.solution.truncate(20)}" : "empty"

  / Debug information (only visible in development)
  - if Rails.env.development?
    .debug-info.border-top.mt-3.pt-2.small.text-muted
      .d-flex.justify-content-between
        span
          strong ID: 
          = patent_application.persisted? ? patent_application.id : "(new)"
        span
          strong Updated: 
          = patent_application.updated_at&.strftime("%H:%M:%S") || "never"
      .mt-1
        strong Title: 
        = patent_application.title.present? ? patent_application.title : "(none)"
      .mt-1
        strong Problem: 
        = patent_application.problem.present? ? "#{patent_application.problem.length} chars" : "empty"
        | , 
        strong Solution: 
        = patent_application.solution.present? ? "#{patent_application.solution.length} chars" : "empty"
